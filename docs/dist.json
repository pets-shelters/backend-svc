{
  "openapi": "3.0.3",
  "info": {
    "title": "PetsShelters",
    "version": "1.0.0",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:80/api",
      "description": "Developer edition"
    }
  ],
  "paths": {
    "/authorization/login": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Login",
        "description": "Redirects user to Google OAuth.  Sets login cookie to manage google_state later.",
        "operationId": "login",
        "responses": {
          "307": {
            "description": "Success",
            "headers": {
              "Set-Cookie": {
                "description": "Login cookie.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/authorization/callback": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Callback",
        "description": "Called by Google OAuth. Sets access and refresh tokens to user's cookies.",
        "operationId": "callback",
        "parameters": [
          {
            "$ref": "#/components/parameters/loginCookieParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Set-Cookie": {
                "description": "Access and refresh tokens cookies.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/authorization/refresh": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Refresh",
        "description": "Refresh user's authorization tokens in cookies.",
        "operationId": "refresh",
        "parameters": [
          {
            "$ref": "#/components/parameters/refreshTokenCookieParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Set-Cookie": {
                "description": "Access and refresh tokens cookies.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/authorization/user-info": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Get user info",
        "description": "Get user info by access_token.",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/UserInfo"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload file",
        "description": "This endpoint allows any user to upload a file.",
        "operationId": "postFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "X-File-Type",
            "in": "header",
            "description": "File type.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "image/jpeg",
                "image/png",
                "image/svg+xml",
                "image/webp"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/FileUploadResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "files_overload"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters": {
      "post": {
        "tags": [
          "Shelters"
        ],
        "summary": "Create shelter",
        "description": "Shelter creating. Each user can have only one shelter.",
        "operationId": "postShelter",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateShelter"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/CreatedID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/FileNotFoundError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "user_already_has_shelter"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/adopters": {
      "post": {
        "tags": [
          "Adopters"
        ],
        "summary": "Create adopter",
        "description": "Create adopter. Only for shelter's employees.",
        "operationId": "postAdopter",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateAdopter"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/CreatedID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdopterAlreadyExistsError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Adopters"
        ],
        "summary": "Get adopters' list",
        "description": "Get adopters' list. Available for shelters' employees.",
        "operationId": "getAdopters",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "filter[phone_number]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by adopter's phone_number (LIKE)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Adopter"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/adopters/{id}": {
      "get": {
        "tags": [
          "Adopters"
        ],
        "summary": "Get adopter by id",
        "description": "Get adopter by id for shelters' employees.",
        "operationId": "getAdopterById",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an adopter to get.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Adopter"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/animals": {
      "post": {
        "tags": [
          "Animals"
        ],
        "summary": "Create animal",
        "description": "Create animal. Only for shelter's employees.",
        "operationId": "postAnimal",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateAnimal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/CreatedID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FileNotFoundError"
                    },
                    {
                      "$ref": "#/components/schemas/LocationNotFoundError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Animals"
        ],
        "summary": "Get animals' list",
        "description": "Get animals' list. Available for anyone.",
        "operationId": "getAnimals",
        "parameters": [
          {
            "$ref": "#/components/parameters/paginationPageParam"
          },
          {
            "$ref": "#/components/parameters/paginationLimitParam"
          },
          {
            "name": "filter[shelter_id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by shelter_id."
          },
          {
            "name": "filter[location_id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by location_id."
          },
          {
            "name": "filter[gender]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "female",
                "male"
              ]
            },
            "description": "Filter by gender."
          },
          {
            "name": "filter[adopted]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by adopted."
          },
          {
            "name": "filter[sterilized]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by sterilized."
          },
          {
            "name": "filter[for_adoption]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filter if animal available for adoption."
          },
          {
            "name": "filter[for_walking]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filter if animal available for walking."
          },
          {
            "name": "filter[birth_date_from]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by birth_date from."
          },
          {
            "name": "filter[birth_date_to]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by birth_date to."
          },
          {
            "name": "filter[type]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by animal type."
          },
          {
            "name": "filter[city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by location city."
          },
          {
            "name": "filter[name]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by animal name (LIKE)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/AnimalForList"
                      }
                    },
                    "pagination_metadata": {
                      "type": "object",
                      "$ref": "#/components/schemas/PaginationMetadata"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/animals/types": {
      "get": {
        "tags": [
          "Animals"
        ],
        "summary": "Get animals' types list",
        "description": "Get animals' types list. Available for anyone.",
        "operationId": "getAnimalsTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/AnimalTypes"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/walks": {
      "get": {
        "tags": [
          "Walks"
        ],
        "summary": "Get walks' list",
        "description": "Get walks' list. Only for shelter's employees.",
        "operationId": "getWalks",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "$ref": "#/components/parameters/paginationPageParam"
          },
          {
            "$ref": "#/components/parameters/paginationLimitParam"
          },
          {
            "name": "filter[status]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "approved"
              ]
            },
            "description": "Filter by status."
          },
          {
            "name": "filter[animal_id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Filter by animal_id."
          },
          {
            "name": "filter[date]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by date."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Walk"
                      }
                    },
                    "pagination_metadata": {
                      "type": "object",
                      "$ref": "#/components/schemas/PaginationMetadata"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/walks/{id}": {
      "put": {
        "tags": [
          "Walks"
        ],
        "summary": "Approve walk",
        "description": "Approve walk request. Only for shelter's employees.",
        "operationId": "putWalk",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a walk to approve.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/ApproveWalk"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Walks"
        ],
        "summary": "Delete walk",
        "description": "Delete walk by id. Only for shelter's employees.",
        "operationId": "deleteWalk",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a walk to delete.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/animals/{id}": {
      "get": {
        "tags": [
          "Animals"
        ],
        "summary": "Get animal by id",
        "description": "Get animal by id for anyone.",
        "operationId": "getAnimalById",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "description": "Token in cookie granted to user after successful login via Google.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an animal to get.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Animal"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Animals"
        ],
        "summary": "Update animal",
        "description": "Animal updating. Only for shelter's employees.",
        "operationId": "putAnimal",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an animal to update.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/UpdateAnimal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FileNotFoundError"
                    },
                    {
                      "$ref": "#/components/schemas/LocationNotFoundError"
                    },
                    {
                      "$ref": "#/components/schemas/EntityNotFoundError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Animals"
        ],
        "summary": "Delete animal",
        "description": "Delete animal by id. Only for shelter's employees.",
        "operationId": "deleteAnimal",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an animal to delete.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/animals/{id}/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get tasks' list for animal",
        "description": "Get tasks' list for animal. Only for shelter's employees.",
        "operationId": "getTasksForAnimal",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an animal to get tasks for.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/TaskForAnimal"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/animals/{id}/walks": {
      "post": {
        "tags": [
          "Walks"
        ],
        "summary": "Create walk",
        "description": "Walk creating. Only for shelter's employees.",
        "operationId": "postWalk",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an animal to create walk for.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateWalk"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/animals/{id}/walks/request": {
      "post": {
        "tags": [
          "Walks"
        ],
        "summary": "Create walk request",
        "description": "Walk request creating. Available for anyone.",
        "operationId": "postWalkRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of an animal to create walk for.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateWalkRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "animal_unavailable_for_walking"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/employees": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Create employee",
        "description": "Employee creating. Only for shelter's manager. Sends invitation email to a new employee.",
        "operationId": "postEmployee",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateEmployee"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/CreatedID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "user_already_exists"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employees' list",
        "description": "Get employees' list. Only for current shelter employees.",
        "operationId": "getEmployees",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Employee"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/employees/{id}": {
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Delete employee",
        "description": "Delete employee by id. Only for shelter's manager.",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of an employee to delete.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/locations": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create location",
        "description": "Create location. Only for shelter's manager.",
        "operationId": "postLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateLocation"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/CreatedID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/locations/cities": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get locations' cities list",
        "description": "Get locations' cities list. Available for anyone.",
        "operationId": "getLocationsCities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "City name."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/locations/{id}": {
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete location",
        "description": "Delete location by id. Only for shelter's manager.",
        "operationId": "deleteLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a location to delete.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PermissionDeniedError"
                    },
                    {
                      "$ref": "#/components/schemas/LocationHasAnimalsError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/names": {
      "get": {
        "tags": [
          "Shelters"
        ],
        "summary": "Get shelters' names list",
        "description": "Get shelters' names with ids. Available for anyone.",
        "operationId": "getSheltersNames",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by name (LIKE)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/ShelterName"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create task",
        "description": "Create task. Only for shelter's employees.",
        "operationId": "postTask",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/CreateTask"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/CreatedID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get tasks' list with executions",
        "description": "Get tasks' list with executions. Only for shelter's employees.",
        "operationId": "getTasksWithExecutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "filter[animal_id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Filter by animal_id."
          },
          {
            "name": "filter[date]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter by task date."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/TaskWithExecutions"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/tasks/{id}": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete task",
        "description": "Delete task by id. Only for shelter's employees.",
        "operationId": "deleteTask",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a task to delete.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/tasks/{id}/done": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Set task done",
        "description": "Set task done (create execution). Only for shelter's employees.",
        "operationId": "putTaskDone",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a task to create execution for.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/SetTaskDone"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/{id}": {
      "get": {
        "tags": [
          "Shelters"
        ],
        "summary": "Get shelter by id",
        "description": "Get shelter by id for anyone.",
        "operationId": "getShelterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a shelter to get.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Shelter"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shelters"
        ],
        "summary": "Update shelter",
        "description": "Shelter updating. Only for shelter's manager.",
        "operationId": "putShelter",
        "parameters": [
          {
            "$ref": "#/components/parameters/accessTokenCookieParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a shelter to update.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/UpdateShelter"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDeniedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FileNotFoundError"
                    },
                    {
                      "$ref": "#/components/schemas/EntityNotFoundError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/shelters/{id}/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get locations' list",
        "description": "Get locations' list for shelter. Available for anyone.",
        "operationId": "getLocations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of a shelter to get locations for.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InternalError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "internal"
            ],
            "description": "Custom error code."
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "bad_request"
            ],
            "description": "Custom error code."
          },
          "detail": {
            "type": "string",
            "description": "Error description."
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "unauthorized"
            ],
            "description": "Custom error code."
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "description": "User info response",
        "required": [
          "id",
          "registered"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique user's ID."
          },
          "registered": {
            "type": "boolean",
            "description": "IF user already registered."
          }
        }
      },
      "FileUploadResponse": {
        "type": "object",
        "description": "File upload response",
        "required": [
          "temporary_file_id"
        ],
        "properties": {
          "temporary_file_id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of a temporary file."
          }
        }
      },
      "CreateShelter": {
        "type": "object",
        "description": "Create shelter request",
        "required": [
          "name",
          "logo",
          "phone_number"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Shelter name."
          },
          "logo": {
            "type": "integer",
            "format": "int64",
            "description": "Temporary file id from /files/upload."
          },
          "phone_number": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "description": "Shelter phone number."
          },
          "instagram": {
            "type": "string",
            "description": "Shelter's instagram url."
          },
          "facebook": {
            "type": "string",
            "description": "Shelter's facebook url."
          }
        }
      },
      "CreatedID": {
        "type": "object",
        "description": "Created response",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of created entity."
          }
        }
      },
      "PermissionDeniedError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "permission_denied"
            ],
            "description": "Custom error code."
          }
        }
      },
      "FileNotFoundError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "file_not_found"
            ],
            "description": "Custom error code."
          }
        }
      },
      "Adopter": {
        "type": "object",
        "description": "Adopter response",
        "required": [
          "id",
          "name",
          "phone_number"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Adopter's unique ID."
          },
          "name": {
            "type": "string",
            "description": "Adopter's name."
          },
          "phone_number": {
            "type": "string",
            "minLength": 12,
            "maxLength": 12,
            "description": "Adopter's phone number."
          }
        }
      },
      "CreateAdopter": {
        "type": "object",
        "description": "Create adopter request",
        "required": [
          "name",
          "phone_number"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Adopter's name."
          },
          "phone_number": {
            "type": "string",
            "minLength": 12,
            "maxLength": 12,
            "description": "Adopter's phone number."
          }
        }
      },
      "AdopterAlreadyExistsError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "adopter_already_exists"
            ],
            "description": "Custom error code."
          }
        }
      },
      "EntityNotFoundError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "entity_not_found"
            ],
            "description": "Custom error code."
          }
        }
      },
      "AnimalForList": {
        "type": "object",
        "description": "Animal response for list",
        "required": [
          "id",
          "photo",
          "name",
          "birth_date",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Animal's unique ID."
          },
          "photo": {
            "type": "string",
            "description": "S3 link to a file."
          },
          "name": {
            "type": "string",
            "description": "Animal name."
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "description": "Animal birth date."
          },
          "type": {
            "type": "string",
            "description": "Animal type."
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "description": "Pagination metadata response",
        "required": [
          "current_page",
          "total_records"
        ],
        "properties": {
          "current_page": {
            "type": "integer",
            "format": "int64",
            "description": "Current page number."
          },
          "total_records": {
            "type": "integer",
            "format": "int64",
            "description": "Total records number."
          }
        }
      },
      "CreateAnimal": {
        "type": "object",
        "description": "Create animal request",
        "required": [
          "location_id",
          "photo",
          "name",
          "birth_date",
          "type",
          "gender",
          "sterilized",
          "for_adoption",
          "for_walking"
        ],
        "properties": {
          "location_id": {
            "type": "integer",
            "format": "int64",
            "description": "Location's ID where animal is located."
          },
          "photo": {
            "type": "integer",
            "format": "int64",
            "description": "Temporary file id from /files/upload."
          },
          "name": {
            "type": "string",
            "description": "Animal name."
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "description": "Animal birth date."
          },
          "type": {
            "type": "string",
            "description": "Animal type."
          },
          "gender": {
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "description": "Animal gender."
          },
          "sterilized": {
            "type": "boolean",
            "description": "Animal sterilization status."
          },
          "for_adoption": {
            "type": "boolean",
            "description": "Is animal available for adoption."
          },
          "for_walking": {
            "type": "boolean",
            "description": "Is animal available for walking."
          },
          "public_description": {
            "type": "string",
            "description": "Public description for potential adopters."
          },
          "private_description": {
            "type": "string",
            "description": "Private description only for shelter's employees."
          }
        }
      },
      "LocationNotFoundError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "location_not_found"
            ],
            "description": "Custom error code."
          }
        }
      },
      "AnimalTypes": {
        "type": "object",
        "description": "Animal types response",
        "required": [
          "animal_types"
        ],
        "properties": {
          "animal_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Walk": {
        "type": "object",
        "description": "Walk response",
        "required": [
          "id",
          "status",
          "animal_id",
          "name",
          "phone_number",
          "date",
          "time"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique walk id."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved"
            ],
            "description": "Walk status."
          },
          "animal_id": {
            "type": "integer",
            "format": "int64",
            "description": "Animal id to walk."
          },
          "name": {
            "type": "string",
            "description": "Walker's name."
          },
          "phone_number": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "description": "Walker's phone number."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Walk date."
          },
          "time": {
            "type": "string",
            "description": "Walk time (ex. \"11:25\")."
          }
        }
      },
      "ApproveWalk": {
        "type": "object",
        "description": "Approve walk request",
        "required": [
          "time"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Walk date."
          },
          "time": {
            "type": "string",
            "description": "Walk time (ex. \"11:25\")."
          }
        }
      },
      "Animal": {
        "type": "object",
        "description": "Animal response",
        "required": [
          "id",
          "location_id",
          "photo",
          "name",
          "birth_date",
          "type",
          "gender",
          "sterilized",
          "for_adoption",
          "for_walking"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Animal's unique ID."
          },
          "location_id": {
            "type": "integer",
            "format": "int64",
            "description": "Location's unique ID."
          },
          "photo": {
            "type": "string",
            "description": "S3 link to a file."
          },
          "name": {
            "type": "string",
            "description": "Animal name."
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "description": "Animal birth date."
          },
          "type": {
            "type": "string",
            "description": "Animal type."
          },
          "gender": {
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "description": "Animal gender."
          },
          "sterilized": {
            "type": "boolean",
            "description": "Is animal sterilized."
          },
          "for_adoption": {
            "type": "boolean",
            "description": "Is animal available for adoption."
          },
          "for_walking": {
            "type": "boolean",
            "description": "Is animal available for walking."
          },
          "adopter_id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of animal's adopter if exists. Available only for shelter employees."
          },
          "public_description": {
            "type": "string",
            "description": "Public description for potential adopters."
          },
          "private_description": {
            "type": "string",
            "description": "Private description only for shelter's employees."
          }
        }
      },
      "UpdateAnimal": {
        "type": "object",
        "description": "Update animal request",
        "properties": {
          "location_id": {
            "type": "integer",
            "format": "int64",
            "description": "Location's unique ID."
          },
          "photo": {
            "type": "integer",
            "format": "int64",
            "description": "Temporary file id from /files/upload."
          },
          "sterilized": {
            "type": "boolean",
            "description": "Is animal sterilized."
          },
          "for_adoption": {
            "type": "boolean",
            "description": "Is animal available for adoption."
          },
          "for_walking": {
            "type": "boolean",
            "description": "Is animal available for walking."
          },
          "adopter_id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of animal's adopter."
          },
          "public_description": {
            "type": "string",
            "description": "Public description for potential adopters."
          },
          "private_description": {
            "type": "string",
            "description": "Private description only for shelter's employees."
          }
        }
      },
      "TaskForAnimal": {
        "type": "object",
        "description": "Task for animal response",
        "required": [
          "id",
          "description",
          "start_date",
          "end_date",
          "executions"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Task unique ID."
          },
          "description": {
            "type": "string",
            "description": "Task description."
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Task start_date."
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "Task end_date."
          },
          "time": {
            "type": "string",
            "description": "Task time (ex. \"11:25\")."
          },
          "executions_number": {
            "type": "integer",
            "format": "int64",
            "description": "Number of executions made for the task."
          }
        }
      },
      "CreateWalk": {
        "type": "object",
        "description": "Create walk request",
        "required": [
          "name",
          "phone_number",
          "date",
          "time"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Walker's name."
          },
          "phone_number": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "description": "Walker's phone number."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Walk date."
          },
          "time": {
            "type": "string",
            "description": "Walk time (ex. \"11:25\")."
          }
        }
      },
      "CreateWalkRequest": {
        "type": "object",
        "description": "Create walk_request request",
        "required": [
          "name",
          "phone_number",
          "date"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Walker's name."
          },
          "phone_number": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "description": "Walker's phone number."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Walk date."
          }
        }
      },
      "Employee": {
        "type": "object",
        "description": "Employee response",
        "required": [
          "id",
          "email",
          "role"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique ID of an employee."
          },
          "email": {
            "type": "string",
            "description": "Email of an employee to create."
          },
          "role": {
            "type": "string",
            "enum": [
              "manager",
              "employee"
            ],
            "description": "Employee's role in a shelter."
          }
        }
      },
      "CreateEmployee": {
        "type": "object",
        "description": "Create employee request",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of an employee to create."
          }
        }
      },
      "CreateLocation": {
        "type": "object",
        "description": "Create location request",
        "required": [
          "city",
          "address"
        ],
        "properties": {
          "city": {
            "type": "string",
            "description": "Location city."
          },
          "address": {
            "type": "string",
            "description": "Location address."
          }
        }
      },
      "LocationHasAnimalsError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "location_has_animals"
            ],
            "description": "Custom error code."
          }
        }
      },
      "ShelterName": {
        "type": "object",
        "description": "Shelter name response",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique shelter's ID."
          },
          "name": {
            "type": "string",
            "description": "Shelter name."
          }
        }
      },
      "TaskExecution": {
        "type": "object",
        "description": "Task execution response",
        "required": [
          "date",
          "done_at"
        ],
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of a user who executed a task. Can be empty if employee was deleted."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Execution for task of date."
          },
          "done_at": {
            "type": "string",
            "format": "datetime",
            "description": "Execution timestamp."
          }
        }
      },
      "TaskWithExecutions": {
        "type": "object",
        "description": "Task with executions response",
        "required": [
          "id",
          "description",
          "animal_id",
          "start_date",
          "end_date",
          "executions"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Task unique ID."
          },
          "description": {
            "type": "string",
            "description": "Task description."
          },
          "animal_id": {
            "type": "integer",
            "format": "int64",
            "description": "Animal unique ID."
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Task start_date."
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "Task end_date."
          },
          "time": {
            "type": "string",
            "description": "Task time (ex. \"11:25\")."
          },
          "executions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/TaskExecution"
            }
          }
        }
      },
      "CreateTask": {
        "type": "object",
        "description": "Create task request",
        "required": [
          "animal_id",
          "description",
          "start_date",
          "end_date"
        ],
        "properties": {
          "animal_id": {
            "type": "integer",
            "format": "int64",
            "description": "Animal's ID to create task for."
          },
          "description": {
            "type": "string",
            "description": "Task description."
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Task start_date."
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "Task end_date."
          },
          "time": {
            "type": "string",
            "description": "Task time (ex. \"11:25\")."
          }
        }
      },
      "SetTaskDone": {
        "type": "object",
        "description": "Create execution request",
        "required": [
          "date"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Execution for task of date."
          }
        }
      },
      "Shelter": {
        "type": "object",
        "description": "Shelter response",
        "required": [
          "id",
          "name",
          "logo",
          "phone_number",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique shelter's ID."
          },
          "name": {
            "type": "string",
            "description": "Shelter name."
          },
          "logo": {
            "type": "string",
            "description": "S3 link to file."
          },
          "phone_number": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "description": "Shelter phone number."
          },
          "instagram": {
            "type": "string",
            "description": "Shelter's instagram url."
          },
          "facebook": {
            "type": "string",
            "description": "Shelter's facebook url."
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "description": "Shelter's creation date."
          }
        }
      },
      "UpdateShelter": {
        "type": "object",
        "description": "Update shelter request",
        "properties": {
          "name": {
            "type": "string",
            "description": "Shelter name."
          },
          "logo": {
            "type": "integer",
            "format": "int64",
            "description": "Temporary file id from /files/upload."
          },
          "phone_number": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "description": "Shelter phone number."
          },
          "instagram": {
            "type": "string",
            "description": "Shelter's instagram url."
          },
          "facebook": {
            "type": "string",
            "description": "Shelter's facebook url."
          }
        }
      },
      "Location": {
        "type": "object",
        "description": "Location response",
        "required": [
          "id",
          "city",
          "address",
          "animals_number"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique ID of a location."
          },
          "city": {
            "type": "string",
            "description": "Location city."
          },
          "address": {
            "type": "string",
            "description": "Location address."
          },
          "animals_number": {
            "type": "integer",
            "format": "int64",
            "description": "Number of animals in current location."
          }
        }
      }
    },
    "parameters": {
      "loginCookieParam": {
        "name": "login",
        "in": "cookie",
        "description": "Token in cookie granted to user in process of login via Google.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "refreshTokenCookieParam": {
        "name": "refresh_token",
        "in": "cookie",
        "description": "Token in cookie granted to user after successful login via Google.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "accessTokenCookieParam": {
        "name": "access_token",
        "in": "cookie",
        "description": "Token in cookie granted to user after successful login via Google.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paginationPageParam": {
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "type": "integer",
          "description": "Page number to return."
        }
      },
      "paginationLimitParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer",
          "description": "Numbers of items per page to return."
        }
      }
    }
  }
}